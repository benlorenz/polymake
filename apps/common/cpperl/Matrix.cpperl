{"app": "common",
 "inst": [
  {"class": "Matrix<Integer>", "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "pkg": "Polymake::common::Matrix_A_Integer_I_NonSymmetric_Z"},
  {"class": "Matrix<double>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "pkg": "Polymake::common::Matrix_A_Float_I_NonSymmetric_Z"},
  {"class": "Matrix<Rational>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "pkg": "Polymake::common::Matrix_A_Rational_I_NonSymmetric_Z"},
  {"pkg": "Polymake::common::Matrix"},
  {"class": "Matrix<UniPolynomial<Rational, int>>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "pkg": "Polymake::common::Matrix_A_UniPolynomial_A_Rational_I_Int_Z_I_NonSymmetric_Z"},
  {"class": "Matrix<TropicalNumber<Min, int>>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/TropicalNumber.h"], "pkg": "Polymake::common::Matrix_A_TropicalNumber_A_Min_I_Int_Z_I_NonSymmetric_Z"},
  {"class": "Matrix<PuiseuxFraction<Max, Rational, Rational>>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "pkg": "Polymake::common::Matrix_A_PuiseuxFraction_A_Max_I_Rational_I_Rational_Z_I_NonSymmetric_Z"},
  {"class": "Matrix<int>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "pkg": "Polymake::common::Matrix_A_Int_I_NonSymmetric_Z"},
  {"class": "Matrix<TropicalNumber<Min, Rational>>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "pkg": "Polymake::common::Matrix_A_TropicalNumber_A_Min_I_Rational_Z_I_NonSymmetric_Z"},
  {"class": "Matrix<RationalFunction<Rational, int>>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "pkg": "Polymake::common::Matrix_A_RationalFunction_A_Rational_I_Int_Z_I_NonSymmetric_Z"},
  {"args": ["Matrix<Rational>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new"},
  {"args": ["Matrix<double>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "new", "sig": "new"},
  {"args": ["Matrix<Rational>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const Matrix<double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<Matrix<Rational>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<Matrix<double>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Matrix<Integer>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "new", "sig": "new"},
  {"args": ["Matrix<int>", "perl::Canned<const pm::SameElementSparseMatrix<pm::IncidenceMatrix<pm::NonSymmetric> const&, int const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/SparseMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const SparseMatrix<Rational, Symmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Integer>", "perl::Canned<const SparseMatrix<Integer, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/SparseMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const Matrix<Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Integer>>&>", "perl::Canned<const Matrix<Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const pm::Transposed<pm::Matrix<pm::Rational> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<double>>&>", "perl::Canned<const Matrix<double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<double>>&>", "perl::Canned<const pm::Transposed<pm::Matrix<double> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const SparseMatrix<Rational, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<UniPolynomial<Rational, int>>", "int(int)", "int(int)"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "op": "new", "sig": "new.int.int"},
  {"args": ["Matrix<int>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "new", "sig": "new"},
  {"args": ["Matrix<PuiseuxFraction<Max, Rational, Rational>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Wary<Matrix<PuiseuxFraction<Max, Rational, Rational>>>&>", "perl::Canned<const Matrix<PuiseuxFraction<Max, Rational, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<PuiseuxFraction<Max, Rational, Rational>>>&>", "perl::Canned<const pm::DiagMatrix<pm::SameElementVector<pm::PuiseuxFraction<pm::Max, pm::Rational, pm::Rational> const&>, true>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Matrix<RationalFunction<Rational, int>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Wary<Matrix<RationalFunction<Rational, int>>>&>", "perl::Canned<const Matrix<RationalFunction<Rational, int>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<RationalFunction<Rational, int>>>&>", "perl::Canned<const pm::DiagMatrix<pm::SameElementVector<pm::RationalFunction<pm::Rational, int> const&>, true>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/RationalFunction.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["int", "perl::Canned<const Wary<pm::RepeatedRow<pm::SameElementVector<pm::Rational const&> >>&>"], "include": ["polymake/Rational.h", "polymake/linalg.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "add", "sig": "add:O.X4.X"},
  {"args": ["Matrix<TropicalNumber<Min, Rational>>", "perl::Canned<const pm::DiagMatrix<pm::SameElementVector<pm::TropicalNumber<pm::Min, pm::Rational> const&>, true>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<TropicalNumber<Min, Rational>>", "int(int)", "int(int)"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.int.int"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<Matrix<TropicalNumber<Min, Rational>>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["perl::Canned<const Wary<Matrix<TropicalNumber<Min, Rational>>>&>", "perl::Canned<const Matrix<TropicalNumber<Min, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "add", "sig": "add:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<TropicalNumber<Min, Rational>>>&>", "perl::Canned<const Matrix<TropicalNumber<Min, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["Matrix<TropicalNumber<Min, int>>", "perl::Canned<const pm::DiagMatrix<pm::SameElementVector<pm::TropicalNumber<pm::Min, int> const&>, true>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/TropicalNumber.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<TropicalNumber<Min, int>>", "int(int)", "int(int)"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.int.int"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<Matrix<TropicalNumber<Min, int>>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/TropicalNumber.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["perl::Canned<const Wary<Matrix<TropicalNumber<Min, int>>>&>", "perl::Canned<const Matrix<TropicalNumber<Min, int>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/TropicalNumber.h"], "op": "add", "sig": "add:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<TropicalNumber<Min, int>>>&>", "perl::Canned<const Matrix<TropicalNumber<Min, int>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/TropicalNumber.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::DiagMatrix<pm::Vector<pm::Rational> const&, false>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"class": "Matrix<QuadraticExtension<Rational>>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "pkg": "Polymake::common::Matrix_A_QuadraticExtension__Rational_I_NonSymmetric_Z"},
  {"args": ["Matrix<Rational>", "int(int)", "int(int)"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.int.int"},
  {"args": ["Matrix<Rational>", "int(int)", "int(bool)"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.int.int"},
  {"args": ["Matrix<double>", "int(int)", "int(int)"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "new", "sig": "new.int.int"},
  {"args": ["Matrix<double>", "perl::Canned<const SparseMatrix<double, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/SparseMatrix.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<TropicalNumber<Min, Rational>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new"},
  {"class": "Matrix<Polynomial<Rational, int>>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Polynomial.h", "polymake/Rational.h"], "pkg": "Polymake::common::Matrix_A_Polynomial_A_Rational_I_Int_Z_I_NonSymmetric_Z"},
  {"class": "Matrix<Polynomial<QuadraticExtension<Rational>, int>>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Polynomial.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "pkg": "Polymake::common::Matrix_A_Polynomial_A_QuadraticExtension__Rational_I_Int_Z_I_NonSymmetric_Z"},
  {"args": ["Matrix<QuadraticExtension<Rational>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new"},
  {"args": ["Matrix<Polynomial<QuadraticExtension<Rational>, int>>", "int(int)", "int(int)"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Polynomial.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.int.int"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<QuadraticExtension<Rational>>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<Matrix<Polynomial<QuadraticExtension<Rational>, int>>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Polynomial.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["Matrix<int>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Integer> const&, pm::all_selector const&, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Polynomial<QuadraticExtension<Rational>, int>>>&>", "perl::Canned<const Vector<Polynomial<QuadraticExtension<Rational>, int>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Polynomial.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["Matrix<Polynomial<Rational, int>>", "int(int)", "int(int)"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Polynomial.h", "polymake/Rational.h"], "op": "new", "sig": "new.int.int"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<Matrix<Polynomial<Rational, int>>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Polynomial.h", "polymake/Rational.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["perl::Canned<const Wary<Matrix<Polynomial<Rational, int>>>&>", "perl::Canned<const Vector<Polynomial<Rational, int>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Polynomial.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["Matrix<QuadraticExtension<Rational>>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<QuadraticExtension<Rational>>>&>", "perl::Canned<const Matrix<QuadraticExtension<Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const Matrix<QuadraticExtension<Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<Rational>", "perl::Canned<const SparseMatrix<Rational, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::Transposed<pm::Matrix<pm::Rational> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Matrix<QuadraticExtension<Rational>>", "perl::Canned<const Matrix<QuadraticExtension<Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"class": "Matrix<TropicalNumber<Max, Rational>>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "pkg": "Polymake::common::Matrix_A_TropicalNumber_A_Max_I_Rational_Z_I_NonSymmetric_Z"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::Transposed<pm::Matrix<pm::Rational> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<TropicalNumber<Max, Rational>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Wary<Matrix<int>>&>", "perl::Canned<const Matrix<int>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["int", "perl::Canned<const Wary<Matrix<Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X4.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const Matrix<int>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Set<int, pm::operations::cmp> const&, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<TropicalNumber<Max, Rational>>", "perl::Canned<const Matrix<TropicalNumber<Max, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<TropicalNumber<Max, Rational>>>&>", "perl::Canned<const Matrix<TropicalNumber<Max, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Matrix<TropicalNumber<Min, Rational>>", "perl::Canned<const Matrix<TropicalNumber<Min, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<TropicalNumber<Min, Rational>>>&>", "perl::Canned<const Matrix<TropicalNumber<Min, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Matrix<Integer>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational>&, pm::all_selector const&, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Integer> const&, pm::Complement<pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&> const, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Integer>", "perl::Canned<const Matrix<Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Integer>", "perl::Canned<const pm::Transposed<pm::Matrix<pm::Integer> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<int>", "perl::Canned<const Matrix<Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<int>", "int(int)", "int(int)"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "new", "sig": "new.int.int"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const SparseMatrix<Rational, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const Matrix<int>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<double>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<Wary<Matrix<Rational>>&>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "Div", "ret": "lvalue", "sig": "Div:O.X5.X"},
  {"args": ["Matrix<double>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<double>&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "new", "sig": "new.X"},
  {"class": "Matrix<PuiseuxFraction<Min, Rational, Rational>>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "pkg": "Polymake::common::Matrix_A_PuiseuxFraction_A_Min_I_Rational_I_Rational_Z_I_NonSymmetric_Z"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<Matrix<int>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["Matrix<int>", "perl::Canned<const pm::DiagMatrix<pm::SameElementVector<int const&>, true>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Integer>", "int(int)", "int(int)"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "new", "sig": "new.int.int"},
  {"args": ["Matrix<Integer>", "perl::Canned<const pm::DiagMatrix<pm::SameElementVector<pm::Integer const&>, true>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::RepeatedRow<pm::Vector<pm::Rational> const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<QuadraticExtension<Rational>>", "perl::Canned<const SparseMatrix<QuadraticExtension<Rational>, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<QuadraticExtension<Rational>>", "perl::Canned<const pm::Transposed<pm::Matrix<pm::QuadraticExtension<pm::Rational> > >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Matrix<QuadraticExtension<Rational>>", "perl::Canned<const SparseMatrix<QuadraticExtension<Rational>, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<QuadraticExtension<Rational>>", "int(int)", "int(int)"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.int.int"},
  {"args": ["perl::Canned<const Wary<Matrix<QuadraticExtension<Rational>>>&>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<double>>&>", "perl::Canned<const Matrix<double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Matrix<Integer>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<Rational>", "perl::Canned<const SparseMatrix<Rational, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::Rational const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::all_selector const&, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<Integer>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Complement<pm::Set<int, pm::operations::cmp> const&> const, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Integer>>&>", "perl::Canned<const Vector<Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Set<int, pm::operations::cmp> const&, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const Set<Vector<Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<PuiseuxFraction<Min, Rational, Rational>>", "perl::Canned<const Matrix<PuiseuxFraction<Min, Rational, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<PuiseuxFraction<Min, Rational, Rational>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Wary<Matrix<PuiseuxFraction<Min, Rational, Rational>>>&>", "perl::Canned<const Matrix<PuiseuxFraction<Min, Rational, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const pm::RepeatedRow<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<int, true> const, mlist<> > const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X4.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const Matrix<Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<QuadraticExtension<Rational>>", "perl::Canned<const SparseMatrix<Rational, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<double>", "perl::Canned<const Matrix<QuadraticExtension<Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<double>", "perl::Canned<const Matrix<QuadraticExtension<Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<double>", "perl::Canned<const SparseMatrix<QuadraticExtension<Rational>, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<int>", "perl::Canned<const Matrix<Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["perl::Canned<const Wary<Matrix<Integer>>&>", "perl::Canned<const Matrix<int>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Integer>>&>", "perl::Canned<const pm::Transposed<pm::Matrix<pm::Integer> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<Wary<Matrix<Integer>>&>", "perl::Canned<const Vector<Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "Div", "ret": "lvalue", "sig": "Div:O.X5.X"},
  {"args": ["perl::Canned<const Wary<pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&, pm::all_selector const&>>&>", "perl::Canned<const pm::RepeatedRow<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer> const&>, pm::Series<int, true> const, mlist<> > const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X4.X"},
  {"args": ["Matrix<double>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<double>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Matrix<double>", "perl::Canned<const SparseMatrix<Rational, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Matrix<double>", "perl::Canned<const SparseMatrix<Rational, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Set<int, pm::operations::cmp> const&, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["perl::Canned<const Matrix<Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::RepeatedRow<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<int, true> const, mlist<> > const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<double>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["perl::Canned<const Wary<Matrix<QuadraticExtension<Rational>>>&>", "perl::Canned<const SparseMatrix<QuadraticExtension<Rational>, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const pm::PermutationMatrix<pm::Array<int> const&, int>&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/permutations.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["Matrix<QuadraticExtension<Rational>>", "perl::Canned<const SparseMatrix<QuadraticExtension<Rational>, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<PuiseuxFraction<Min, Rational, Rational>>>&>", "perl::Canned<const SparseVector<PuiseuxFraction<Min, Rational, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::all_selector const&, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Array<int> const&, pm::all_selector const&>&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational>&, pm::Series<int, true> const, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Series<int, true> const, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const pm::RepeatedRow<pm::Vector<pm::Rational> const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "sub", "sig": "sub:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<double>>&>", "perl::Canned<const pm::RepeatedRow<pm::Vector<double> const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "sub", "sig": "sub:O.X4.X"},
  {"args": ["Matrix<double>", "perl::Canned<const SparseMatrix<double, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/SparseMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<Wary<Matrix<double>>&>", "perl::Canned<const Matrix<double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "Div", "ret": "lvalue", "sig": "Div:O.X5.X"},
  {"args": ["perl::Canned<const Wary<Matrix<double>>&>", "perl::Canned<const Vector<double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["Matrix<double>", "perl::Canned<const pm::DiagMatrix<pm::SameElementVector<double const&>, true>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<double>", "perl::Canned<const NodeMap<Undirected, Vector<Rational>>&>"], "include": ["polymake/Graph.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const Matrix<Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["Matrix<Integer>", "perl::Canned<const SparseMatrix<Rational, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<double>", "perl::Canned<const pm::MatrixMinor<pm::SparseMatrix<pm::QuadraticExtension<pm::Rational>, pm::NonSymmetric> const&, pm::all_selector const&, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Set.h", "polymake/SparseMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<Matrix<Integer>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<double>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<double> const&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<double>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<double> const&, pm::Array<int> const&, pm::all_selector const&>&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Integer>>&>", "perl::Canned<const pm::RepeatedRow<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer>&>, pm::Series<int, true> const, mlist<> > const&>&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "sub", "sig": "sub:O.X4.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<double>&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational>&, pm::all_selector const&, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::all_selector const&, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<QuadraticExtension<Rational>>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::QuadraticExtension<pm::Rational> > const&, pm::all_selector const&, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<Wary<Matrix<Integer>>&>", "int"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "Mul", "ret": "lvalue", "sig": "Mul:O.X5.X"},
  {"args": ["Matrix<TropicalNumber<Min, Rational>>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<int>", "perl::Canned<const SparseMatrix<int, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/SparseMatrix.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<Rational>", "perl::Canned<const SparseMatrix<int, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Integer>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<int> const&, pm::Set<int, pm::operations::cmp> const&, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Integer>", "perl::Canned<const pm::MatrixMinor<pm::SparseMatrix<int, pm::NonSymmetric> const&, pm::Set<int, pm::operations::cmp> const&, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Set.h", "polymake/SparseMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational>&, pm::Set<int, pm::operations::cmp> const, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<int>>&>", "perl::Canned<const SparseMatrix<int, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/SparseMatrix.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const Matrix<TropicalNumber<Min, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<Wary<Matrix<Rational>>&>", "perl::Canned<const pm::VectorChain<mlist<pm::Vector<pm::Rational> const&, pm::Vector<pm::Rational> const&> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "Div", "ret": "lvalue", "sig": "Div:O.X5.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Complement<pm::Set<int, pm::operations::cmp> const&> const, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Complement<pm::Set<int, pm::operations::cmp> const&> const, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Matrix<Rational>", "perl::Canned<const SparseMatrix<int, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["perl::Canned<const Wary<Matrix<PuiseuxFraction<Max, Rational, Rational>>>&>", "perl::Canned<const Matrix<PuiseuxFraction<Max, Rational, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"class": "Matrix<std::pair<double, double>>", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/client.h"], "pkg": "Polymake::common::Matrix_A_Pair_A_Float_I_Float_Z_I_NonSymmetric_Z"},
  {"args": ["Matrix<int>", "perl::Canned<const Matrix<int>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<std::pair<double, double>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/client.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Wary<Matrix<int>>&>", "perl::Canned<const Matrix<Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<TropicalNumber<Max, Rational>>>&>", "perl::Canned<const Matrix<TropicalNumber<Max, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "add", "sig": "add:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<TropicalNumber<Max, Rational>>>&>", "perl::Canned<const Vector<TropicalNumber<Max, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Matrix<int>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["perl::Canned<Wary<Matrix<Rational>>&>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "Add", "ret": "lvalue", "sig": "Add:O.X5.X"},
  {"args": ["perl::Canned<const Wary<Matrix<PuiseuxFraction<Min, Rational, Rational>>>&>", "perl::Canned<const Vector<PuiseuxFraction<Min, Rational, Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["Matrix<PuiseuxFraction<Min, Rational, Rational>>", "int(int)", "int(int)"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.int.int"},
  {"args": ["perl::Canned<const Wary<Matrix<std::pair<double, double>>>&>", "perl::Canned<const Matrix<std::pair<double, double>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/client.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<double>>&>", "perl::Canned<const pm::Transposed<pm::SparseMatrix<double, pm::NonSymmetric> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/SparseMatrix.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Matrix<double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["Matrix<TropicalNumber<Min, Rational>>", "perl::Canned<const pm::RepeatedRow<pm::SameElementVector<pm::Rational const&> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<Wary<Matrix<QuadraticExtension<Rational>>>&>", "perl::Canned<const Matrix<QuadraticExtension<Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "Div", "ret": "lvalue", "sig": "Div:O.X5.X"},
  {"args": ["perl::Canned<const Wary<Matrix<QuadraticExtension<Rational>>>&>", "perl::Canned<const Matrix<QuadraticExtension<Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<QuadraticExtension<Rational>>>&>", "perl::Canned<const pm::DiagMatrix<pm::SameElementVector<pm::QuadraticExtension<pm::Rational> const&>, true>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<double>>&>", "perl::Canned<const SparseMatrix<double, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/SparseMatrix.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::Matrix<pm::Rational> const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<Matrix<Rational>>>>", "perl::AnchorArg<perl::Canned<const Vector<Rational>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const, pm::RepeatedRow<pm::Vector<pm::Rational> const&> const>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>", "perl::AnchorArg<perl::Canned<const Matrix<Rational>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Array<int> const&, pm::all_selector const&> const>, std::integral_constant<bool, false> >&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::Matrix<pm::Rational> const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<double const&> > const, pm::RepeatedCol<pm::SameElementVector<double const&> > const, pm::Matrix<double> const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<Matrix<double>>>>", "perl::AnchorArg<perl::Canned<const Vector<double>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<double>", "perl::Canned<const pm::BlockMatrix<mlist<pm::Matrix<double> const, pm::RepeatedRow<pm::Vector<double> const&> const>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<double>>&>>", "perl::AnchorArg<perl::Canned<const Vector<double>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<double>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<double const&> const&> const, pm::BlockMatrix<mlist<pm::Matrix<double> const&, pm::RepeatedRow<pm::Vector<double> const&> const>, std::integral_constant<bool, true> > const>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<double>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<double const&> > const, pm::Matrix<double> const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<double>>&>>", "perl::AnchorArg<perl::Canned<const Matrix<double>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<double const&> > const, pm::Matrix<double> const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<double>", "perl::Canned<const pm::BlockMatrix<mlist<pm::Matrix<double> const&, pm::Matrix<double> const&>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true> const>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>", "perl::AnchorArg<perl::Canned<Matrix<Rational>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::Vector<pm::Rational> > const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::Vector<pm::Rational> const&> const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true> const, pm::SparseMatrix<pm::Rational, pm::Symmetric> const>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true> const, pm::RepeatedRow<pm::Vector<pm::Rational> > const>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>", "perl::AnchorArg<perl::Canned<const SparseMatrix<Rational, NonSymmetric>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const&>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<Matrix<Rational>>>>", "perl::AnchorArg<perl::Canned<const Matrix<Rational>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const&>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<QuadraticExtension<Rational>>>&>>", "perl::AnchorArg<perl::Canned<const Matrix<QuadraticExtension<Rational>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<Matrix<QuadraticExtension<Rational>>>>>", "perl::AnchorArg<perl::Canned<const Matrix<QuadraticExtension<Rational>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::Matrix<pm::QuadraticExtension<pm::Rational> > const, pm::Matrix<pm::QuadraticExtension<pm::Rational> > const&>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<QuadraticExtension<Rational>>>&>>", "perl::AnchorArg<perl::Canned<pm::RepeatedRow<pm::SameElementVector<pm::QuadraticExtension<pm::Rational> const&> >>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X15.X11"},
  {"args": ["perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::QuadraticExtension<pm::Rational> > const&, pm::RepeatedRow<pm::SameElementVector<pm::QuadraticExtension<pm::Rational> const&> > const>, std::integral_constant<bool, false> >>&>", "perl::Canned<const pm::Transposed<pm::Matrix<pm::Rational> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::QuadraticExtension<pm::Rational> > const&, pm::RepeatedRow<pm::SameElementVector<pm::QuadraticExtension<pm::Rational> const&> > const>, std::integral_constant<bool, false> >>&>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>", "perl::AnchorArg<perl::Canned<pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Set<int, pm::operations::cmp> const, pm::Series<int, true> const>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<QuadraticExtension<Rational>>", "perl::Canned<const pm::BlockMatrix<mlist<pm::Matrix<pm::QuadraticExtension<pm::Rational> > const&, pm::Matrix<pm::QuadraticExtension<pm::Rational> > const&>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Integer const&> > const, pm::Matrix<pm::Integer> const>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>", "perl::AnchorArg<perl::Canned<const Vector<Rational>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::RepeatedRow<pm::Vector<pm::Rational> const&> const>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>", "perl::AnchorArg<perl::Canned<pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X15.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::RepeatedRow<pm::SameElementVector<pm::Rational const&> > const>, std::integral_constant<bool, false> >>>>", "perl::AnchorArg<perl::Canned<pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true>>>"], "include": ["polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X15.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<Integer>>&>>", "perl::AnchorArg<perl::Canned<Matrix<Integer>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedRow<pm::Vector<pm::Rational> const&> const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::QuadraticExtension<pm::Rational> const&> > const, pm::RepeatedCol<pm::SameElementVector<pm::QuadraticExtension<pm::Rational> const&> > const, pm::Matrix<pm::QuadraticExtension<pm::Rational> > const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<Matrix<QuadraticExtension<Rational>>>>>", "perl::AnchorArg<perl::Canned<const Vector<QuadraticExtension<Rational>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<QuadraticExtension<Rational>>", "perl::Canned<const pm::BlockMatrix<mlist<pm::Matrix<pm::QuadraticExtension<pm::Rational> > const, pm::RepeatedRow<pm::Vector<pm::QuadraticExtension<pm::Rational> > const&> const>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> >>&>>", "perl::AnchorArg<perl::Canned<Matrix<Rational>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> >>&>>", "perl::AnchorArg<perl::Canned<Matrix<Rational>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> >>&>>", "perl::AnchorArg<perl::Canned<Matrix<Rational>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> >>&>>", "perl::AnchorArg<perl::Canned<Matrix<Rational>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> >>&>>", "perl::AnchorArg<perl::Canned<Matrix<Rational>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<double>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> > const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<double>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> > const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::Vector<pm::Rational> const&> const, pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::all_selector const&, pm::Series<int, true> const> const>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::all_selector const&, pm::Series<int, true> const>>>>", "perl::AnchorArg<perl::Canned<pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/linalg.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const&>, std::integral_constant<bool, true> >>&>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<pm::MatrixMinor<pm::Matrix<int>&, pm::all_selector const&, pm::Series<int, true> const>>>>", "perl::AnchorArg<perl::Canned<const Vector<int>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Set.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X15.X11"},
  {"args": ["Matrix<int>", "perl::Canned<const pm::BlockMatrix<mlist<pm::MatrixMinor<pm::Matrix<int>&, pm::all_selector const&, pm::Series<int, true> const> const, pm::RepeatedCol<pm::Vector<int> const&> const>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<QuadraticExtension<Rational>>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::QuadraticExtension<pm::Rational> const&> > const, pm::Matrix<pm::QuadraticExtension<pm::Rational> > const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<double>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<double const&> const&> const, pm::Matrix<double> const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<int>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::Vector<int> > const, pm::Matrix<int> const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<int>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::Vector<int> > const, pm::Matrix<int> const>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<int>>&>>", "perl::AnchorArg<perl::Canned<const Matrix<int>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::Matrix<int> const&, pm::Matrix<int> const&>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::RepeatedRow<pm::Vector<pm::Rational> const&> const>, std::integral_constant<bool, true> >>&>>", "perl::AnchorArg<perl::Canned<const Matrix<Rational>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>", "perl::AnchorArg<perl::Canned<pm::RepeatedRow<pm::SameElementVector<pm::Rational const&> >>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X15.X11"},
  {"args": ["perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::RepeatedRow<pm::SameElementVector<pm::Rational const&> > const>, std::integral_constant<bool, false> >>&>", "perl::Canned<const pm::Transposed<pm::Matrix<pm::Rational> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::RepeatedRow<pm::SameElementVector<pm::Rational const&> > const>, std::integral_constant<bool, false> >>&>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Array<int> const&, pm::all_selector const&>&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["perl::Canned<const pm::MatrixMinor<pm::Matrix<double> const&, pm::Array<int> const&, pm::all_selector const&>&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const SparseMatrix<Integer, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational>&, pm::Set<int, pm::operations::cmp> const&, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Matrix<QuadraticExtension<Rational>>>&>", "perl::Canned<const pm::Transposed<pm::Matrix<pm::QuadraticExtension<pm::Rational> > >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Matrix<double>>&>", "perl::Canned<const pm::DiagMatrix<pm::SameElementVector<double const&>, true>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "sub", "sig": "sub:O.X4.X"},
  {"args": ["perl::Canned<Wary<Matrix<Rational>>&>", "perl::Canned<const SparseMatrix<Rational, NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "Div", "ret": "lvalue", "sig": "Div:O.X5.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::MatrixMinor<pm::Matrix<pm::Rational>&, pm::all_selector const&, pm::Series<int, true> const> const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<double>", "perl::Canned<const Matrix<double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>", "perl::AnchorArg<perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::Rational const&>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Set<int, pm::operations::cmp> const, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>", "perl::AnchorArg<perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Set<int, pm::operations::cmp> const&, pm::all_selector const&>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Set<int, pm::operations::cmp> const&, pm::all_selector const&> const&>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Integer>", "perl::Canned<const pm::MatrixMinor<pm::SparseMatrix<pm::Rational, pm::NonSymmetric> const&, pm::all_selector const&, pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/SparseMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedRow<pm::Vector<pm::Rational> const&> const, pm::Matrix<pm::Rational> const&>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Set<int, pm::operations::cmp> const&, pm::all_selector const&>>&>>", "perl::AnchorArg<perl::Canned<const Matrix<Rational>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>", "perl::AnchorArg<perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<int, true> const, mlist<> >&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::RepeatedRow<pm::SameElementVector<pm::Rational const&> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<pm::RepeatedRow<pm::SameElementVector<pm::Rational const&> >>&>>", "perl::AnchorArg<perl::Canned<const Matrix<Rational>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedRow<pm::SameElementVector<pm::Rational const&> > const&, pm::Matrix<pm::Rational> const&>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::Transposed<pm::RepeatedRow<pm::SameElementVector<pm::Rational const&> > >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Matrix<Integer>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const pm::Transposed<pm::Matrix<pm::Rational> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<pm::Transposed<pm::Matrix<pm::Rational> >>&>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<pm::Transposed<pm::Matrix<pm::Rational> >>&>", "perl::Canned<const pm::Transposed<pm::Matrix<pm::Rational> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Matrix<UniPolynomial<Rational, int>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "op": "new", "sig": "new"},
  {"args": ["Matrix<Rational>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::Vector<pm::Rational> const&> const, pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&, pm::Series<int, true> const> const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Matrix<int>", "perl::Canned<const pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<Wary<Matrix<Integer>>&>", "perl::Canned<const pm::RepeatedRow<pm::Vector<pm::Integer> const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "Sub", "ret": "lvalue", "sig": "Sub:O.X5.X"},
  {"args": ["perl::Canned<const Wary<Matrix<Rational>>&>", "perl::Canned<const pm::PermutationMatrix<std::vector<int, std::allocator<int> > const&, int>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/permutations.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["Matrix<double>", "perl::Canned<const pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> > const&>, std::integral_constant<bool, false> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
 null ],
"version": 3}
