{"app": "common",
 "inst": [
  {"pkg": "Polymake::common::IncidenceMatrix"},
  {"class": "IncidenceMatrix<Symmetric>", "include": ["polymake/IncidenceMatrix.h"], "pkg": "Polymake::common::IncidenceMatrix__Symmetric"},
  {"class": "IncidenceMatrix<NonSymmetric>", "include": ["polymake/IncidenceMatrix.h"], "pkg": "Polymake::common::IncidenceMatrix__NonSymmetric"},
  {"args": ["IncidenceMatrix<NonSymmetric>"], "include": ["polymake/IncidenceMatrix.h"], "op": "new", "sig": "new"},
  {"args": ["perl::AnchorArg<perl::Canned<Wary<IncidenceMatrix<NonSymmetric>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["perl::Canned<const Wary<IncidenceMatrix<NonSymmetric>>&>", "perl::Canned<const IncidenceMatrix<NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const pm::AdjacencyMatrix<pm::graph::Graph<pm::graph::Undirected>, false>&>>"], "include": ["polymake/Graph.h"], "op": "com", "sig": "com:O.X11"},
  {"args": ["perl::Canned<const Wary<pm::ComplementIncidenceMatrix<pm::AdjacencyMatrix<pm::graph::Graph<pm::graph::Undirected>, false> const&>>&>", "perl::Canned<const pm::IndexMatrix<pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true> const&>&>"], "include": ["polymake/Graph.h", "polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "sub", "sig": "sub:O.X4.X"},
  {"args": ["IncidenceMatrix<Symmetric>"], "include": ["polymake/IncidenceMatrix.h"], "op": "new", "sig": "new"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const pm::Transposed<pm::IncidenceMatrix<pm::NonSymmetric> >&>"], "include": ["polymake/IncidenceMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::TryCanned<const Array<Set<int>>>", "int(int)"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Set.h"], "op": "new", "sig": "new.X.int"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const NodeMap<Directed, Set<int>>&>"], "include": ["polymake/Graph.h", "polymake/IncidenceMatrix.h", "polymake/Set.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const Array<Set<int>>&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Set.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "int(int)", "int(int)"], "include": ["polymake/IncidenceMatrix.h"], "op": "new", "sig": "new.int.int"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const Array<Set<int>>&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const IncidenceMatrix<NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const FacetList&>"], "include": ["polymake/FacetList.h", "polymake/IncidenceMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const pm::Transposed<pm::IncidenceMatrix<pm::NonSymmetric> >&>>"], "include": ["polymake/IncidenceMatrix.h"], "op": "com", "sig": "com:O.X11"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const pm::ComplementIncidenceMatrix<pm::Transposed<pm::IncidenceMatrix<pm::NonSymmetric> > const&>&>"], "include": ["polymake/IncidenceMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const IncidenceMatrix<NonSymmetric>&>>"], "include": ["polymake/IncidenceMatrix.h"], "op": "com", "sig": "com:O.X11"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const Set<Set<int>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<IncidenceMatrix<NonSymmetric>>&>>", "void", "void"], "include": ["polymake/IncidenceMatrix.h"], "op": "cal", "ret": "lvalue", "sig": "cal:O:F:M14.x.x"},
  {"args": ["pm::MatrixMinor<pm::IncidenceMatrix<pm::NonSymmetric>&, pm::Complement<pm::SingleElementSetCmp<int, pm::operations::cmp> const> const, pm::Complement<pm::SingleElementSetCmp<int, pm::operations::cmp> const> const>", "perl::Canned<const IncidenceMatrix<NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Set.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const Array<Array<int>>&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const std::list<Set<int>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Set.h", "polymake/list"], "op": "new", "sig": "new.X"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const pm::MatrixMinor<pm::IncidenceMatrix<pm::NonSymmetric>&, pm::Indices<pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<int, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric> const&> const, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Set.h", "polymake/SparseMatrix.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const pm::MatrixMinor<pm::IncidenceMatrix<pm::NonSymmetric> const&, pm::all_selector const&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const pm::MatrixMinor<pm::IncidenceMatrix<pm::NonSymmetric> const&, pm::Set<int, pm::operations::cmp> const, pm::all_selector const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const pm::Transposed<pm::MatrixMinor<pm::IncidenceMatrix<pm::NonSymmetric> const&, pm::Set<int, pm::operations::cmp> const, pm::all_selector const&> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const Vector<Set<int>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const pm::MatrixMinor<pm::IncidenceMatrix<pm::NonSymmetric> const&, pm::all_selector const&, pm::Set<int, pm::operations::cmp> const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Wary<IncidenceMatrix<NonSymmetric>>&>>", "perl::AnchorArg<perl::Canned<const IncidenceMatrix<NonSymmetric>&>>"], "include": ["polymake/IncidenceMatrix.h"], "op": "div", "sig": "div:O.X15.X11"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const pm::BlockMatrix<mlist<pm::IncidenceMatrix<pm::NonSymmetric> const&, pm::IncidenceMatrix<pm::NonSymmetric> const&>, std::integral_constant<bool, true> >&>"], "include": ["polymake/IncidenceMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const pm::Rows<pm::IncidenceMatrix<pm::NonSymmetric> >&>"], "include": ["polymake/IncidenceMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const pm::Transposed<pm::MatrixMinor<pm::IncidenceMatrix<pm::NonSymmetric> const&, pm::all_selector const&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const pm::Subsets_of_k<pm::Series<int, true> const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/PowerSet.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["IncidenceMatrix<NonSymmetric>", "perl::Canned<const pm::Subsets_of_k<pm::Series<int, true> const>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/PowerSet.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
 null ],
"version": 3}
