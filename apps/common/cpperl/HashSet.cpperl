{"app": "common",
 "inst": [
  {"guard_name": "CORE_WRAPPERS_hash_set", "include": ["polymake/hash_set"], "pkg": "Polymake::common::HashSet", "wrapper_file": "include/core-wrappers/polymake/hash_set"},
  {"class": "hash_set<Int>", "include": ["polymake/hash_set"], "pkg": "Polymake::common::HashSet__Int"},
  {"class": "hash_set<Bitset>", "include": ["polymake/Bitset.h", "polymake/hash_set"], "pkg": "Polymake::common::HashSet__Bitset"},
  {"args": ["hash_set<Bitset>"], "include": ["polymake/Bitset.h", "polymake/hash_set"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const hash_set<Bitset>&>", "perl::Canned<const hash_set<Bitset>&>"], "include": ["polymake/Bitset.h", "polymake/hash_set"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"class": "hash_set<Set<Int>>", "include": ["polymake/Set.h", "polymake/hash_set"], "pkg": "Polymake::common::HashSet__Set__Int"},
  {"args": ["hash_set<Set<Int>>", "perl::Canned<const Array<Set<Int>>&>"], "include": ["polymake/Array.h", "polymake/Set.h", "polymake/hash_set"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const hash_set<Set<Int>>&>", "perl::Canned<const hash_set<Set<Int>>&>"], "include": ["polymake/Set.h", "polymake/hash_set"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"class": "hash_set<Vector<Rational>>", "include": ["polymake/Rational.h", "polymake/Vector.h", "polymake/hash_set"], "pkg": "Polymake::common::HashSet__Vector__Rational"},
  {"args": ["perl::Canned<const hash_set<Int>&>", "Int"], "func": "exists", "include": ["polymake/hash_set"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"args": ["hash_set<Int>"], "include": ["polymake/hash_set"], "op": "new", "sig": "new"},
  {"args": ["hash_set<Vector<Rational>>"], "include": ["polymake/Rational.h", "polymake/Vector.h", "polymake/hash_set"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<hash_set<Vector<Rational>>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/hash_set"], "op": "Add", "ret": "lvalue", "sig": "Add:O.X1.X"},
  {"args": ["perl::Canned<const hash_set<Vector<Rational>>&>", "perl::Canned<const Vector<Rational>&>"], "func": "exists", "include": ["polymake/Rational.h", "polymake/Vector.h", "polymake/hash_set"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"args": ["hash_set<Set<Int>>"], "include": ["polymake/Set.h", "polymake/hash_set"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<hash_set<Set<Int>>&>", "perl::Canned<const Set<Int>&>"], "include": ["polymake/Set.h", "polymake/hash_set"], "op": "Add", "ret": "lvalue", "sig": "Add:O.X1.X"},
  {"args": ["perl::Canned<const hash_set<Vector<Rational>>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "exists", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/hash_set"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"args": ["perl::Canned<const hash_set<Vector<Rational>>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "exists", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/hash_set"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"args": ["hash_set<Vector<Rational>>", "perl::Canned<const pm::Rows<pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, false> > >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/hash_set", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
 null ],
"version": 3}
