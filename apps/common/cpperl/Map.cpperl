{"app": "common",
 "inst": [
  {"pkg": "Polymake::common::Map"},
  {"class": "Map<Vector<double>, int>", "include": ["polymake/Map.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Float_I_Int_Z"},
  {"class": "Map<int, Rational>", "include": ["polymake/Map.h", "polymake/Rational.h"], "pkg": "Polymake::common::Map_A_Int_I_Rational_Z"},
  {"class": "Map<Rational, int>", "include": ["polymake/Map.h", "polymake/Rational.h"], "pkg": "Polymake::common::Map_A_Rational_I_Int_Z"},
  {"class": "Map<int, int>", "include": ["polymake/Map.h"], "pkg": "Polymake::common::Map_A_Int_I_Int_Z"},
  {"class": "Map<int, QuadraticExtension<Rational>>", "include": ["polymake/Map.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "pkg": "Polymake::common::Map_A_Int_I_QuadraticExtension__Rational_Z"},
  {"class": "Map<Rational, Rational>", "include": ["polymake/Map.h", "polymake/Rational.h"], "pkg": "Polymake::common::Map_A_Rational_I_Rational_Z"},
  {"args": ["Map<Vector<double>, int>"], "include": ["polymake/Map.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Vector<double>, int>&>", "perl::Canned<const Vector<double>&>"], "include": ["polymake/Map.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Vector<double>, int>&>>", "perl::Canned<const Vector<double>&>"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::Canned<const Map<Vector<double>, int>&>", "perl::Canned<const Vector<double>&>"], "func": "exists", "include": ["polymake/Map.h", "polymake/Vector.h"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"args": ["perl::Canned<Map<Vector<double>, int>&>", "perl::Canned<const Vector<double>&>"], "func": "erase", "include": ["polymake/Map.h", "polymake/Vector.h"], "kind": "meth", "sig": "erase:CORE.M1.X"},
  {"args": ["perl::Canned<Map<Vector<double>, int>&>", "perl::Canned<const Vector<double>&>"], "func": "pm::perl::delayed_erase", "include": ["polymake/Map.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_delete.X1.X"},
  {"args": ["Map<int, int>"], "include": ["polymake/Map.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<int, int>&>", "int"], "include": ["polymake/Map.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Rational, int>"], "include": ["polymake/Map.h", "polymake/Rational.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Rational, int>&>", "perl::Canned<const Rational&>"], "include": ["polymake/Map.h", "polymake/Rational.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<int, Rational>"], "include": ["polymake/Map.h", "polymake/Rational.h"], "op": "new", "sig": "new"},
  {"args": ["Map<int, QuadraticExtension<Rational>>"], "include": ["polymake/Map.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new"},
  {"class": "Map<std::pair<int, int>, int>", "include": ["polymake/Map.h", "polymake/client.h"], "pkg": "Polymake::common::Map_A_Pair_A_Int_I_Int_Z_I_Int_Z"},
  {"class": "Map<std::pair<int, int>, Vector<Rational>>", "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/client.h"], "pkg": "Polymake::common::Map_A_Pair_A_Int_I_Int_Z_I_Vector__Rational_Z"},
  {"class": "Map<Set<int>, Integer>", "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Set.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Integer_Z"},
  {"class": "Map<Vector<int>, Integer>", "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Int_I_Integer_Z"},
  {"class": "Map<Integer, int>", "include": ["polymake/Integer.h", "polymake/Map.h"], "pkg": "Polymake::common::Map_A_Integer_I_Int_Z"},
  {"class": "Map<std::pair<int, int>, Vector<Integer>>", "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Vector.h", "polymake/client.h"], "pkg": "Polymake::common::Map_A_Pair_A_Int_I_Int_Z_I_Vector__Integer_Z"},
  {"class": "Map<int, std::pair<int, int>>", "include": ["polymake/Map.h", "polymake/client.h"], "pkg": "Polymake::common::Map_A_Int_I_Pair_A_Int_I_Int_Z_Z"},
  {"args": ["Map<Vector<int>, Integer>"], "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["Map<Set<int>, Integer>"], "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"class": "Map<Set<int>, Vector<Rational>>", "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Vector__Rational_Z"},
  {"class": "Map<Vector<Integer>, Vector<Integer>>", "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Integer_I_Vector__Integer_Z"},
  {"args": ["Map<Set<int>, Vector<Rational>>"], "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Set<int>, Vector<Rational>>&>>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&>&>"], "func": "pm::perl::find_element", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::Canned<const Map<Set<int>, Vector<Rational>>&>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::Canned<Map<Set<int>, Vector<Rational>>&>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"class": "Map<int, std::list<int>>", "include": ["polymake/Map.h", "polymake/list"], "pkg": "Polymake::common::Map_A_Int_I_List__Int_Z"},
  {"class": "Map<Array<int>, int>", "include": ["polymake/Array.h", "polymake/Map.h"], "pkg": "Polymake::common::Map_A_Array__Int_I_Int_Z"},
  {"args": ["Map<std::pair<int, int>, int>"], "include": ["polymake/Map.h", "polymake/client.h"], "op": "new", "sig": "new"},
  {"args": ["Map<Array<int>, int>"], "include": ["polymake/Array.h", "polymake/Map.h"], "op": "new", "sig": "new"},
  {"class": "Map<Vector<double>, bool>", "include": ["polymake/Map.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Float_I_Bool_Z"},
  {"class": "Map<Vector<Rational>, bool>", "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Rational_I_Bool_Z"},
  {"class": "Map<Vector<double>, Set<int>>", "include": ["polymake/Map.h", "polymake/Set.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Float_I_Set__Int_Z"},
  {"class": "Map<Vector<Rational>, int>", "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Rational_I_Int_Z"},
  {"class": "Map<Bitset, hash_map<Bitset, Rational>>", "include": ["polymake/Bitset.h", "polymake/Map.h", "polymake/Rational.h", "polymake/hash_map"], "pkg": "Polymake::common::Map_A_Bitset_I_HashMap_A_Bitset_I_Rational_Z_Z"},
  {"args": ["Map<Vector<double>, Set<int>>"], "include": ["polymake/Map.h", "polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Vector<double>, Set<int>>&>", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<int, true> const, mlist<> > const&, pm::Series<int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Set.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::Canned<const Map<Vector<double>, int>&>", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<int, true> const, mlist<> > const&, pm::Series<int, true> const, mlist<> >&>"], "func": "exists", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Set.h", "polymake/Vector.h"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"args": ["perl::Canned<Map<Vector<double>, int>&>", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<int, true> const, mlist<> > const&, pm::Series<int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Set.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::Canned<Map<Vector<double>, int>&>", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<int, true> const, mlist<> > const&, pm::Series<int, true> const, mlist<> >&>"], "func": "erase", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Set.h", "polymake/Vector.h"], "kind": "meth", "sig": "erase:CORE.M1.X"},
  {"args": ["Map<Integer, int>"], "include": ["polymake/Integer.h", "polymake/Map.h"], "op": "new", "sig": "new"},
  {"args": ["Map<Bitset, hash_map<Bitset, Rational>>"], "include": ["polymake/Bitset.h", "polymake/Map.h", "polymake/Rational.h", "polymake/hash_map"], "op": "new", "sig": "new"},
  {"args": ["Map<Vector<Rational>, bool>"], "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Vector<Rational>, bool>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::Canned<const Map<Vector<Rational>, bool>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<int, true> const, mlist<> >&>"], "func": "exists", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"args": ["Map<Vector<Rational>, int>"], "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Vector<Rational>, int>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Vector<Rational>, int>&>>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<int, true> const, mlist<> >&>"], "func": "pm::perl::find_element", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["Map<Vector<double>, bool>"], "include": ["polymake/Map.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Vector<double>, bool>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::Canned<const Map<Vector<double>, bool>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<int, true> const, mlist<> >&>"], "func": "exists", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Vector.h"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"args": ["perl::Canned<Map<Vector<double>, int>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Vector<double>, int>&>>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<int, true> const, mlist<> >&>"], "func": "pm::perl::find_element", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["Map<Rational, Rational>"], "include": ["polymake/Map.h", "polymake/Rational.h"], "op": "new", "sig": "new"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<int, int>&>>", "int"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<std::pair<int, int>, int>&>>", "perl::Canned<const std::pair<int, int>&>"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/client.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["Map<std::pair<int, int>, Vector<Integer>>"], "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Vector.h", "polymake/client.h"], "op": "new", "sig": "new"},
  {"args": ["Map<std::pair<int, int>, Vector<Rational>>"], "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/client.h"], "op": "new", "sig": "new"},
  {"class": "Map<std::string, std::string>", "include": ["polymake/Map.h"], "pkg": "Polymake::common::Map_A_String_I_String_Z"},
  {"args": ["Map<std::string, std::string>"], "include": ["polymake/Map.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<std::string, std::string>&>", "std::string"], "include": ["polymake/Map.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Set<int>, Integer>", "perl::Canned<const Map<Set<int>, Integer>&>"], "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"class": "Map<Set<int>, int>", "include": ["polymake/Map.h", "polymake/Set.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Int_Z"},
  {"class": "Map<Set<int>, Map<Set<int>, int>>", "include": ["polymake/Map.h", "polymake/Set.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Map_A_Set__Int_I_Int_Z_Z"},
  {"class": "Map<Vector<Integer>, Set<int>>", "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Set.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Integer_I_Set__Int_Z"},
  {"args": ["Map<Vector<Integer>, Set<int>>"], "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Vector<Integer>, Set<int>>&>", "perl::Canned<const Vector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Set.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Set<Set<int>>, Matrix<Rational>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"args": ["Map<Set<int>, Matrix<Rational>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Set<int>, Matrix<Rational>>&>", "perl::Canned<const Set<int>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Set<Set<int>>, int>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Set<int>, Matrix<Rational>>&>>", "perl::Canned<const Set<int>&>"], "func": "pm::perl::find_element", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::Canned<Map<Set<Set<int>>, int>&>", "perl::Canned<const Set<Set<int>>&>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Set<Set<int>>, int>&>>", "perl::Canned<const Set<Set<int>>&>"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/Set.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::Canned<Map<Set<Set<int>>, Matrix<Rational>>&>", "perl::Canned<const Set<Set<int>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<int, Array<Set<int>>>"], "include": ["polymake/Array.h", "polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<int, Array<Set<int>>>&>", "int"], "include": ["polymake/Array.h", "polymake/Map.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<int, Array<Set<int>>>&>>", "int"], "func": "pm::perl::find_element", "include": ["polymake/Array.h", "polymake/Map.h", "polymake/Set.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::Canned<const Map<Set<int>, Matrix<Rational>>&>", "perl::Canned<const Set<int>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::Canned<const Map<Set<int>, Matrix<Rational>>&>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"class": "Map<Set<int>, Matrix<Rational>>", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Matrix_A_Rational_I_NonSymmetric_Z_Z"},
  {"class": "Map<int, Array<int>>", "include": ["polymake/Array.h", "polymake/Map.h"], "pkg": "Polymake::common::Map_A_Int_I_Array__Int_Z"},
  {"class": "Map<int, Map<int, Array<int>>>", "include": ["polymake/Array.h", "polymake/Map.h"], "pkg": "Polymake::common::Map_A_Int_I_Map_A_Int_I_Array__Int_Z_Z"},
  {"class": "Map<Set<int>, Set<int>>", "include": ["polymake/Map.h", "polymake/Set.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Set__Int_Z"},
  {"args": ["Map<Set<int>, Set<int>>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Set<int>, Set<int>>&>", "perl::Canned<const Set<int>&>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Vector<Rational>, int>&>>", "perl::Canned<const Vector<Rational>&>"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["Map<Set<int>, Set<int>>", "perl::Canned<const Map<Set<int>, Set<int>>&>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Set<int>, Set<int>>&>>", "perl::Canned<const Set<int>&>"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/Set.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"class": "Map<Bitset, Bitset>", "include": ["polymake/Bitset.h", "polymake/Map.h"], "pkg": "Polymake::common::Map_A_Bitset_I_Bitset_Z"},
  {"class": "Map<Bitset, int>", "include": ["polymake/Bitset.h", "polymake/Map.h"], "pkg": "Polymake::common::Map_A_Bitset_I_Int_Z"},
  {"args": ["Map<Bitset, Bitset>"], "include": ["polymake/Bitset.h", "polymake/Map.h"], "op": "new", "sig": "new"},
  {"args": ["Map<Bitset, int>"], "include": ["polymake/Bitset.h", "polymake/Map.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Bitset, Bitset>&>", "perl::Canned<const Bitset&>"], "include": ["polymake/Bitset.h", "polymake/Map.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Set<int>, int>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Set<int>, int>&>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Set<int>, int>", "perl::Canned<const Map<Set<int>, int>&>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<Map<Set<int>, int>&>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Set<int>, int>&>>", "perl::Canned<const Set<int>&>"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/Set.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::Canned<Map<Set<int>, int>&>", "perl::Canned<const Set<int>&>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Vector<Rational>, int>&>>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<int, true> const, mlist<> >&>"], "func": "pm::perl::find_element", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Set<int>, Set<int>>&>>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&>&>"], "func": "pm::perl::find_element", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Set.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"class": "Map<int, std::string>", "include": ["polymake/Map.h"], "pkg": "Polymake::common::Map_A_Int_I_String_Z"},
  {"args": ["Map<int, std::string>"], "include": ["polymake/Map.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<int, std::string>&>", "int"], "include": ["polymake/Map.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<int, std::string>&>>", "int"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
 null ],
"version": 3}
