{"app": "common",
 "inst": [
  {"pkg": "Polymake::common::SparseVector"},
  {"class": "SparseVector<Rational>", "include": ["polymake/Rational.h", "polymake/SparseVector.h"], "pkg": "Polymake::common::SparseVector__Rational"},
  {"class": "SparseVector<int>", "include": ["polymake/SparseVector.h"], "pkg": "Polymake::common::SparseVector__Int"},
  {"class": "SparseVector<double>", "include": ["polymake/SparseVector.h"], "pkg": "Polymake::common::SparseVector__Float"},
  {"args": ["SparseVector<Rational>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h"], "op": "new", "sig": "new"},
  {"class": "SparseVector<Integer>", "include": ["polymake/Integer.h", "polymake/SparseVector.h"], "pkg": "Polymake::common::SparseVector__Integer"},
  {"args": ["SparseVector<Integer>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::Integer const&>&>"], "include": ["polymake/Integer.h", "polymake/SparseVector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<SparseVector<Integer>>&>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::Integer const&>&>"], "include": ["polymake/Integer.h", "polymake/SparseVector.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["SparseVector<Rational>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::Rational const&>&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["SparseVector<Rational>", "perl::Canned<const SparseVector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<int, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>>&>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["SparseVector<Integer>"], "include": ["polymake/Integer.h", "polymake/SparseVector.h"], "op": "new", "sig": "new"},
  {"args": ["SparseVector<Rational>", "perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Integer, false, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/SparseVector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<SparseVector<Rational>>&>", "perl::Canned<const SparseVector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"class": "SparseVector<PuiseuxFraction<Min, Rational, Rational>>", "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "pkg": "Polymake::common::SparseVector__PuiseuxFraction_A_Min_I_Rational_I_Rational_Z"},
  {"class": "SparseVector<QuadraticExtension<Rational>>", "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseVector.h"], "pkg": "Polymake::common::SparseVector__QuadraticExtension__Rational"},
  {"args": ["SparseVector<QuadraticExtension<Rational>>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::QuadraticExtension<pm::Rational> const&>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["SparseVector<double>", "perl::Canned<const SparseVector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h"], "op": "new", "sig": "new.X"},
  {"args": ["SparseVector<double>"], "include": ["polymake/SparseVector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric> const&, pm::Series<int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric> const&, pm::Series<int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/SparseMatrix.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["double", "perl::Canned<const Wary<SparseVector<double>>&>"], "include": ["polymake/SparseVector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<SparseVector<double>>&>", "perl::Canned<const SparseVector<double>&>"], "include": ["polymake/SparseVector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["SparseVector<PuiseuxFraction<Min, Rational, Rational>>", "perl::Canned<const SparseVector<PuiseuxFraction<Min, Rational, Rational>>&>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.X"},
  {"args": ["SparseVector<PuiseuxFraction<Min, Rational, Rational>>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Wary<SparseVector<PuiseuxFraction<Min, Rational, Rational>>>&>", "perl::Canned<const SparseVector<PuiseuxFraction<Min, Rational, Rational>>&>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["SparseVector<QuadraticExtension<Rational>>", "perl::Canned<const SparseVector<QuadraticExtension<Rational>>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseVector.h"], "op": "new", "sig": "new.X"},
  {"args": ["SparseVector<QuadraticExtension<Rational>>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseVector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Wary<SparseVector<QuadraticExtension<Rational>>>&>", "perl::Canned<const SparseVector<QuadraticExtension<Rational>>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseVector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::Rational const&>>&>", "perl::Canned<const pm::VectorChain<mlist<pm::SameElementVector<pm::Rational> const, pm::Vector<pm::Rational> const> >&>"], "include": ["polymake/Rational.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "add", "sig": "add:O.X4.X"},
  {"args": ["perl::Canned<const Wary<SparseVector<Rational>>&>", "perl::Canned<const pm::VectorChain<mlist<pm::SameElementVector<pm::Integer> const, pm::Vector<pm::Integer> const> >&>"], "include": ["polymake/Integer.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["SparseVector<Integer>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::Rational const&>&>"], "include": ["polymake/Integer.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>>&>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["SparseVector<double>", "int(int)"], "include": ["polymake/SparseVector.h"], "op": "new", "sig": "new.int"},
  {"args": ["SparseVector<Rational>", "int(int)"], "include": ["polymake/Rational.h", "polymake/SparseVector.h"], "op": "new", "sig": "new.int"},
  {"args": ["perl::Canned<const Wary<SparseVector<Rational>>&>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["SparseVector<Rational>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["SparseVector<double>", "perl::Canned<const Vector<double>&>"], "include": ["polymake/SparseVector.h", "polymake/Vector.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["perl::Canned<const Wary<pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::QuadraticExtension<pm::Rational>, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>>&>", "perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::QuadraticExtension<pm::Rational>, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "sub", "sig": "sub:O.X4.X"},
  {"args": ["perl::Canned<const Wary<SparseVector<QuadraticExtension<Rational>>>&>", "perl::Canned<const SparseVector<QuadraticExtension<Rational>>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseVector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["SparseVector<PuiseuxFraction<Min, Rational, Rational>>", "perl::Canned<const Vector<PuiseuxFraction<Min, Rational, Rational>>&>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<SparseVector<QuadraticExtension<Rational>>>&>", "perl::Canned<const Vector<QuadraticExtension<Rational>>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["SparseVector<Rational>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<double, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double>&>, pm::Series<int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/SparseMatrix.h"], "op": "add", "sig": "add:O.X4.X"},
  {"args": ["pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<double, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>", "perl::Canned<const Vector<double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/SparseMatrix.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::Canned<const Wary<pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer> const&>, pm::Series<int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["SparseVector<double>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, double const&>&>"], "include": ["polymake/SparseVector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["SparseVector<double>", "perl::Canned<const SparseVector<double>&>"], "include": ["polymake/SparseVector.h"], "op": "new", "sig": "new.X"},
  {"class": "SparseVector<TropicalNumber<Min, Rational>>", "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "pkg": "Polymake::common::SparseVector__TropicalNumber_A_Min_I_Rational_Z"},
  {"args": ["SparseVector<TropicalNumber<Min, Rational>>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new"},
  {"class": "SparseVector<TropicalNumber<Max, Rational>>", "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "pkg": "Polymake::common::SparseVector__TropicalNumber_A_Max_I_Rational_Z"},
  {"class": "SparseVector<PuiseuxFraction<Max, Rational, Rational>>", "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "pkg": "Polymake::common::SparseVector__PuiseuxFraction_A_Max_I_Rational_I_Rational_Z"},
  {"args": ["perl::Canned<const Wary<SparseVector<Integer>>&>", "perl::Canned<const SparseVector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/SparseVector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<SparseVector<TropicalNumber<Min, Rational>>>&>", "perl::Canned<const SparseVector<TropicalNumber<Min, Rational>>&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["SparseVector<Integer>", "perl::Canned<const SparseVector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/SparseVector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::Rational const&>>>"], "include": ["polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, double const&>&>>", "perl::AnchorArg<perl::Canned<Wary<pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<double const&> > const, pm::Matrix<double> const&>, std::integral_constant<bool, false> >>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "div", "sig": "div:O.X11.X15"},
  {"args": ["perl::Canned<const Wary<pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Integer, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>>&>", "perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::SparseMatrix<pm::Rational, pm::NonSymmetric> const>, std::integral_constant<bool, false> >>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/linalg.h"], "op": "div", "sig": "div:O.X11.X15"},
  {"args": ["perl::Canned<const Wary<pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<double, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>>&>", "perl::Canned<const Matrix<double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/SparseMatrix.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const Wary<pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<double, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>>&>", "perl::Canned<const Vector<double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/SparseMatrix.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["double", "perl::Canned<const Wary<pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, double const&>>&>"], "include": ["polymake/linalg.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::Rational const&>&>"], "include": ["polymake/Rational.h", "polymake/linalg.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["int", "perl::AnchorArg<perl::Canned<SparseVector<Rational>>>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["int", "perl::AnchorArg<perl::Canned<pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::Rational const&>>>"], "include": ["polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["perl::Canned<const Wary<SparseVector<Rational>>&>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "mul", "sig": "mul:O.X4.X"},
  {"args": ["SparseVector<PuiseuxFraction<Max, Rational, Rational>>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Wary<SparseVector<PuiseuxFraction<Max, Rational, Rational>>>&>", "perl::Canned<const SparseVector<PuiseuxFraction<Max, Rational, Rational>>&>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<int, pm::operations::cmp> const, pm::Integer const&>&>"], "include": ["polymake/Integer.h", "polymake/linalg.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true> const&>, pm::Series<int, false> const, mlist<> >>&>", "perl::Canned<const SparseVector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
 null ],
"version": 3}
