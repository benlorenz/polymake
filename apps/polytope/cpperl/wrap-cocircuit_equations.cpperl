{"app": "polytope", "embed": "cocircuit_equations.cc",
 "inst": [
  {"args": ["Rational", "Set<Int>", "void", "Set<Int>(perl::Canned<const Set<Int>&>)"], "func": "cocircuit_equation_of_ridge", "include": ["polymake/Rational.h", "polymake/Set.h"], "sig": "cocircuit_equation_of_ridge:T2.B.C1", "tp": "2"},
  {"args": ["Rational", "Set<Int>", "void", "perl::Canned<const Array<Set<Int>>&>", "perl::Canned<const Array<Set<Int>>&>", "void"], "func": "cocircuit_equations", "include": ["polymake/Array.h", "polymake/Rational.h", "polymake/Set.h"], "sig": "cocircuit_equations:T2.B.X.X.o", "tp": "2"},
  {"args": ["Rational", "Set<Int>", "void", "perl::Canned<const Matrix<Rational>&>", "perl::Canned<const IncidenceMatrix<NonSymmetric>&>", "perl::Canned<const Array<Set<Int>>&>", "perl::Canned<const Array<Set<Int>>&>", "void"], "func": "cocircuit_equations", "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "sig": "cocircuit_equations:T2.x.X.X.X.X.o", "tp": "2"},
  {"args": ["SparseMatrix<Rational, NonSymmetric>", "perl::Canned<const pm::ListMatrix<pm::SparseVector<Int> >&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/SparseMatrix.h"], "op": "new", "sig": "new.X"},
  {"args": ["Rational", "Set<Int>", "void", "perl::Canned<const Matrix<Rational>&>", "perl::Canned<const IncidenceMatrix<NonSymmetric>&>", "perl::Canned<const Array<Set<Int>>&>", "perl::Canned<const Array<Set<Int>>&>", "void"], "func": "foldable_cocircuit_equations", "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "sig": "foldable_cocircuit_equations:T2.x.X.X.X.X.o", "tp": "2"},
  {"args": ["Rational", "Bitset", "void", "Bitset(perl::Canned<const Bitset&>)"], "func": "cocircuit_equation_of_ridge", "include": ["polymake/Bitset.h", "polymake/Rational.h"], "sig": "cocircuit_equation_of_ridge:T2.B.C1", "tp": "2"},
  {"args": ["perl::Canned<const Wary<SparseMatrix<Int, NonSymmetric>>&>", "perl::Canned<const pm::ListMatrix<pm::SparseVector<Int> >&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/SparseMatrix.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["SparseMatrix<Rational, NonSymmetric>", "perl::Canned<const pm::ListMatrix<pm::SparseVector<Int> >&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/SparseMatrix.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
 null ],
"version": 3}
